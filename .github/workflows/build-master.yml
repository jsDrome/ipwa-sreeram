name: Build

on:
  push:
    branches:
      - master

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
  CYPRESS_TOKEN: ${{ secrets.CYPRESS_TOKEN }}
  PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  config_props__url: ${{ secrets.config_props__url }}
  FIREBASE_APP_NAME: ${{ secrets.FIREBASE_APP_NAME }}
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  EXPO_CLI_USERNAME: ${{ secrets.EXPO_CLI_USERNAME }}
  EXPO_CLI_PASSWORD: ${{ secrets.EXPO_CLI_PASSWORD }}
  # GITHUB_DOCKER_IMAGE_NAME: ipwa
  # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  # GITHUB_REPO: ${{ github.repository }}
  # GITHUB_USER: ${{ github.actor }}
  # config_firebase__apiKey: ${{ secrets.config_firebase__apiKey }}
jobs:
  sanity_check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm i
      - name: Sanity Checks
        run: sh ./node_modules/@jsdrome/scripts/sanity_check.sh

  release_heroku:
    runs-on: ubuntu-latest
    needs: [sanity_check]
    steps:
      - uses: actions/checkout@v2
      - name: Heroku Staging
        run: |
          npm i @jsdrome/infra
          sh ./node_modules/@jsdrome/scripts/release_heroku.sh

  regression_tests:
    needs: [sanity_check, release_heroku]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Regression Tests
        run: |
          npm i
          sh ./node_modules/@jsdrome/scripts/regression_tests.sh

  release_docker_images:
    needs: [sanity_check, release_heroku, regression_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Push to Dockerhub
        run: |
          npm i
          sh ./node_modules/@jsdrome/scripts/release_dockerhub.sh
      # - name: Push to Github Container Registry
      #   run: sh ./node_modules/@jsdrome/scripts/release_github.sh

  release_firebase:
    needs: [sanity_check, release_heroku, regression_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cloud functions
        run: |
          npm i
          sh ./node_modules/@jsdrome/scripts/release_firebase.sh

  release_expo:
    needs: [sanity_check, release_heroku, regression_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_CLI_USERNAME }}
          expo-password: ${{ secrets.EXPO_CLI_PASSWORD }}
      - run: npm i
      - run: expo publish --config package.json

  # release_npm:
  #   needs: [sanity_check, release_heroku, regression_tests]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Publish package to npm
  #       run: sh ./node_modules/@jsdrome/scripts/release_npm.sh
